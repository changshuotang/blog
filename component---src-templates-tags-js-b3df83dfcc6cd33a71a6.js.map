{"version":3,"sources":["webpack:///./src/templates/tags.js","webpack:///./src/components/tag.js","webpack:///(webpack)/buildin/module.js"],"names":["Tags","pageContext","data","tag","siteTitle","site","siteMetadata","title","allMarkdownRemark","edges","totalCount","location","style","lineHeight","rhythm","background","TagMetadata","color","display","fontWeight","paddingLeft","paddingRight","paddingTop","paddingBottom","borderRadius","marginLeft","marginRight","map","node","slug","fields","frontmatter","key","to","_","require","Tag","tagName","boxShadow","kebabCase","module","exports","webpackPolyfill","deprecate","paths","children","Object","defineProperty","enumerable","get","l","i"],"mappings":"4FAAA,gFAiDeA,UA1CF,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACnBC,EAAQF,EAARE,IACFC,EAAYF,EAAKG,KAAKC,aAAaC,MAFH,EAGRL,EAAKM,kBAA3BC,EAH8B,EAG9BA,MAAOC,EAHuB,EAGvBA,WAEf,OACE,kBAAC,IAAD,CAAQC,SAAU,KAAMJ,MAAOH,GAC7B,6BACE,wBAAIQ,MAAO,CAACC,WAAYC,YAAO,OACzBJ,EADN,SACuC,IAAfA,EAAmB,GAAK,KADhD,gBAEE,yBAAKE,MAAO,CACVG,WAAYC,IAAYb,GAAKc,MAC7BC,QAAS,SACTC,WAAY,SACZF,MAAO,QACPG,YAAa,GACbC,aAAc,GACdC,WAAY,EACZC,cAAe,EACfC,aAAc,GACdC,WAAY,EACZC,YAAa,IAEZvB,IAGL,4BACGM,EAAMkB,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACJC,EAASD,EAAKE,OAAdD,KACAtB,EAAUqB,EAAKG,YAAfxB,MACR,OACE,wBAAIyB,IAAKH,GACP,kBAAC,OAAD,CAAMI,GAAIJ,GAAOtB,Y,kCCvCjC,uEAEM2B,EAAIC,EAAQ,QAELnB,EAAc,CACvB,UAAa,CACT,MAAS,WAEb,MAAS,CACL,MAAS,YAsBFoB,IAlBH,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACX,OAAOrB,EAAYqB,IACf,kBAAC,OAAD,CAAMzB,MAAO,CAAC0B,UAAW,QAASL,GAAE,SAAWC,EAAEK,UAAUF,IACvD,2BAAOzB,MAAO,CACVG,WAAYC,EAAYqB,GAASpB,MACjCA,MAAO,QACPG,YAAa,EACbC,aAAc,EACdC,WAAY,EACZC,cAAe,EACfC,aAAc,EACdC,WAAY,EACZC,YAAa,IACbW,M,mBC1BhBG,EAAOC,QAAU,SAASD,GAoBzB,OAnBKA,EAAOE,kBACXF,EAAOG,UAAY,aACnBH,EAAOI,MAAQ,GAEVJ,EAAOK,WAAUL,EAAOK,SAAW,IACxCC,OAAOC,eAAeP,EAAQ,SAAU,CACvCQ,YAAY,EACZC,IAAK,WACJ,OAAOT,EAAOU,KAGhBJ,OAAOC,eAAeP,EAAQ,KAAM,CACnCQ,YAAY,EACZC,IAAK,WACJ,OAAOT,EAAOW,KAGhBX,EAAOE,gBAAkB,GAEnBF","file":"component---src-templates-tags-js-b3df83dfcc6cd33a71a6.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport { TagMetadata } from \"../components/tag\"\nimport { rhythm, scale } from \"../utils/typography\"\n\nconst Tags = ({ pageContext, data }) => {\n  const { tag } = pageContext\n  const siteTitle = data.site.siteMetadata.title\n  const { edges, totalCount } = data.allMarkdownRemark\n\n  return (\n    <Layout location={\"ok\"} title={siteTitle}>\n      <div>\n        <h3 style={{lineHeight: rhythm(1.5)}}>\n          {`${totalCount} post${totalCount === 1 ? \"\" : \"s\"} tagged with `}\n          <div style={{\n            background: TagMetadata[tag].color,\n            display: \"inline\",\n            fontWeight: \"normal\",\n            color: 'white',\n            paddingLeft: 10,\n            paddingRight: 10,\n            paddingTop: 5,\n            paddingBottom: 5,\n            borderRadius: 10,\n            marginLeft: 5,\n            marginRight: 5,\n          }}>\n            {tag}\n          </div>\n        </h3>\n        <ul>\n          {edges.map(({ node }) => {\n            const { slug } = node.fields\n            const { title } = node.frontmatter\n            return (\n              <li key={slug}>\n                <Link to={slug}>{title}</Link>\n              </li>\n            )\n          })}\n        </ul>\n      </div>\n    </Layout>\n  )\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`","import React from \"react\"\nimport { Link } from \"gatsby\"\nconst _ = require(\"lodash\")\n\nexport const TagMetadata = {\n    'Technical': {\n        'color': '#118ab2',\n    },\n    'Music': {\n        'color': '#52b788',\n    }\n};\n\nconst Tag = ({ tagName }) => {\n    return TagMetadata[tagName] && (\n        <Link style={{boxShadow: \"none\"}} to={`/tags/${_.kebabCase(tagName)}`}>\n            <small style={{\n                background: TagMetadata[tagName].color,\n                color: 'white',\n                paddingLeft: 6,\n                paddingRight: 6,\n                paddingTop: 3,\n                paddingBottom: 3,\n                borderRadius: 5,\n                marginLeft: 3,\n                marginRight: 3,\n            }}>{tagName}</small>\n        </Link>\n    );\n};\n\nexport default Tag;","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n"],"sourceRoot":""}